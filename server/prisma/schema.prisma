// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum TestCaseType {
  Example
  Hidden
}

model Tag {
  id        String     @id @default(cuid())
  name      String
  questions Question[]
}

model User {
  id          String       @id @default(cuid())
  name        String
  email       String       @unique
  username    String       @unique
  password    String
  image       String?
  role        Role         @default(USER)
  questions   Question[]
  submissions Submission[]
}

enum Difficulty {
  Easy
  Medium
  Hard
}

model Question {
  id           Int          @id @default(autoincrement())
  title        String
  description  String
  userId       String
  difficulty   Difficulty
  user         User         @relation(fields: [userId], references: [id])
  createdAt    DateTime     @default(now())
  inputFormat  String      
  outputFormat String      
  constraints  String @default("n<=10^5")
  submissions  Submission[]
  testCase     TestCase[]
  tags         Tag[]
}

model Submission {
  id         String   @id @default(cuid())
  questionId Int
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  question   Question @relation(fields: [questionId], references: [id])
  code       String
  language   String
  status     String
  createdAt  DateTime @default(now())
}

model TestCase {
  id          String       @id @default(cuid())
  questionId  Int
  question    Question     @relation(fields: [questionId], references: [id])
  input       String
  output      String
  type        TestCaseType
  explanation String?
  createdAt   DateTime     @default(now())
}
